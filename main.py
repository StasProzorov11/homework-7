# Важливо: не використовувати цикли для реалізації основної логіки.
# Потрібно використати рекурсію.
# Цикл можна використовувати лише у 4 завданні для знаходження суми чисел.
## Завдання 1.
# Написати рекурсивну функцію знаходження ступеня числа.
## Завдання 2.
# Написати рекурсивну функцію, яка виводить N зірок у ряд, число N задає користувач.
# Проілюструйте роботу функції прикладом. (Протестувати)
## Завдання 3.
# Написати рекурсивну функцію, яка обчислює суму всіх чисел у діапазоні від a до b.
# Користувач вводить a та b. Проілюструйте роботу функції прикладом.
##

# Завдання 1.
# Написати рекурсивну функцію знаходження ступеня числа.

# def get_num_pow(number, degree):
#   if degree <= 1:
#    return number
#
#   return number * get_num_pow(number, degree - 1)
#
# print(get_num_pow(2, 4))
# get_num_pow(2, 4) -> 2 * get_num_pow(2, 3) => 16
# get_num_pow(2, 3) -> 2 * get_num_pow(2, 2) => 8
# get_num_pow(2, 2) -> 2 * get_num_pow(2, 1) => 4
# get_num_pow(2, 1) => 2

# Завдання 2.
# Написати рекурсивну функцію, яка виводить N зірок у ряд, число N задає користувач.
# Проілюструйте роботу функції прикладом. (Протестувати)

# def stars(n):

#     if n <= 0:
#         return
#     print('*', end='')
#     stars(n-1)
# # print(stars(int(input('введите количество звезд: '))))
# stars(5)

# Завдання 3.
# Написати рекурсивну функцію, яка обчислює суму всіх чисел у діапазоні від a до b.
# Користувач вводить a та b. Проілюструйте роботу функції прикладом.

# def sum_range(a, b):
#     if a > b:
#         return 0
#     return a + sum_range(a+1, b)
# print(sum_range(1, 7))
# # Выведет 28 на экран (1+2+3+4+5+6+7)

